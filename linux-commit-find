#!/usr/bin/env bash

find_commit_in_branch() {
	local commit="none"
	git checkout "$1" -q
	git pull -q
	commit=$(git log -1 --grep "${MSG}" | sed '/^commit/{s/commit //;q}')

	git describe --abbrev=0 --contains "${commit}"

	if [[ -n ${commit} ]]; then
		echo "${1} ${commit}"
	else
		echo "${1} none"
	fi
}

# The tail hack can probably be implemented by sed but I don't know how.
MSG=$(git log -1 ${1} | sed '/^    / {s/^[[:space:]]*//;q}' | tail -1)

# Stable/lts branches
for branch in linux-{5.{11.y,10.y,4.y},4.{19.y,14.y,9.y,4.y}}; do
	commit=$(find_commit_in_branch "${branch}")
	echo "${branch} ${commit}"
done
